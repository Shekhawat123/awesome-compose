input {
  udp {
    port => 5000
    codec => plain
  }

  file {
    path => "/var/log/mysql/general.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    type => "mysql"
  }

  beats {
    port => 5044
  }
}

filter {
  if [type] == "mysql" {
    grok {
      match => { "message" => "%{GREEDYDATA:mysql_raw}" }
    }
  } else if [fields][service] == "backend" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:log}" }
    }
    mutate {
      rename => { "[fields][service]" => "service" }
    }
    date {
      match => ["timestamp", "yyyy-MM-dd HH:mm:ss"]
      target => "@timestamp"
      remove_field => ["timestamp"]
    }
  } else {
    grok {
      match => { "message" => "%{SYSLOG5424PRI}%{SYSLOGTIMESTAMP} %{HOSTNAME} %{DATA}: %{GREEDYDATA:json_payload}" }
    }

    json {
      source => "json_payload"
    }

    date {
      match => ["time", "dd/MMM/yyyy:HH:mm:ss Z"]
      target => "@timestamp"
      remove_field => ["time"]
    }

    geoip {
      source => "remote_ip"
    }

    useragent {
      source => "agent"
      target => "useragent"
    }
  }
}

output {
  if [type] == "mysql" {
    elasticsearch {
      hosts => ["http://es:9200"]
      index => "mysql"
    }
  } else if [service] == "backend" {
    elasticsearch {
      hosts => ["http://es:9200"]
      index => "flask"
    }
  } else {
    elasticsearch {
      hosts => ["http://es:9200"]
      index => "nginx"
    }
  }

  stdout {
    codec => rubydebug
  }
}
